const Packet = require("../../receiver/galileo/packet.js")
const { UintTag, StringTag } = require('../../receiver/galileo/types.js');

describe('test Packet class', () => {
  it('Deve ser capaz de decodificar um pacote header do GalileoSky', () => {
    const testPaketBin = [
      0x01, 0x17, 0x80, 0x01, 0x82, 0x02, 0x10, 0x03, 0x38, 0x36, 0x32, 0x30, 0x35, 0x37, 0x30,
      0x34, 0x37, 0x37, 0x34, 0x35, 0x35, 0x33, 0x31, 0x04, 0x32, 0x00, 0xB5, 0x48
    ];

    const testPaket = new Packet();
    testPaket.setPacket({
      header: 0x01,
      length: 23,
      tags: [
        { tag: 0x01, value: new UintTag(130) },
        { tag: 0x02, value: new UintTag(16) },
        { tag: 0x03, value: new StringTag("862057047745531") },
        { tag: 0x04, value: new UintTag(50) }
      ],
      crc: 18613
    });

    const p = new Packet();
    p.decode(testPaketBin);

    expect(p).toEqual(testPaket);
  });

  it('Deve ser capaz de decodificar um pacote vazio', () => {
    const testPaketBin = [0x01, 0x00, 0x80, 0x21, 0xA0];

    const testPaket = new Packet();
    testPaket.setPacket({
      header: 0x01,
      length: 0,
      tags: [],
      crc: 40993
    });

    const p = new Packet();
    p.decode(testPaketBin);

    expect(p).toEqual(testPaket);
  });

  it('Deve ser capaz de decodificar um pacote principal do GalileoSky', () => {

    const testPaketBin = [
      0x01, 0xE7, 0x83, 0x10, 0x00, 0x00, 0x03, 0x38, 0x36, 0x32, 0x30, 0x35, 0x37, 0x30,
      0x34, 0x37, 0x37, 0x34, 0x35, 0x35, 0x33, 0x31, 0x20, 0x4E, 0x83, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x01,
      0x3A, 0x41, 0x3F, 0x30, 0x42, 0xFE, 0x0E, 0x10, 0x01, 0x00, 0x20, 0x8D, 0x83, 0xFF, 0x5C, 0x30, 0xF3, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40,
      0x00, 0x3A, 0x41, 0x3B, 0x2E, 0x42, 0x08, 0x0F, 0x10, 0x02, 0x00, 0x20, 0x06, 0x84, 0xFF, 0x5C, 0x30, 0xF3,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00,
      0x40, 0x00, 0x3A, 0x41, 0x2E, 0x30, 0x42, 0x22, 0x0F, 0x10, 0x03, 0x00, 0x20, 0x6B, 0x84, 0xFF, 0x5C, 0x30,
      0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35,
      0x00, 0x40, 0x00, 0x3A, 0x41, 0x45, 0x30, 0x42, 0x39, 0x0F, 0x10, 0x04, 0x00, 0x20, 0x76, 0x84, 0xFF, 0x5C,
      0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00,
      0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0xDF, 0x2D, 0x42, 0x3A, 0x0F, 0x10, 0x05, 0x00, 0x20, 0x81, 0x84, 0xFF,
      0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00,
      0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x5B, 0x30, 0x42, 0x3B, 0x0F, 0x10, 0x06, 0x00, 0x20, 0x8B, 0x84,
      0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34,
      0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x2B, 0x2E, 0x42, 0x3E, 0x0F, 0x10, 0x07, 0x00, 0x20, 0x96,
      0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00,
      0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0xF2, 0x2D, 0x42, 0x3F, 0x0F, 0x10, 0x08, 0x00, 0x20,
      0xA1, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00,
      0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x83, 0x2E, 0x42, 0x3E, 0x0F, 0x10, 0x09, 0x00,
      0x20, 0xAC, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00,
      0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x49, 0x30, 0x42, 0x42, 0x0F, 0x10, 0x0A,
      0x00, 0x20, 0xB7, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00,
      0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x3A, 0x30, 0x42, 0x43, 0x0F, 0x10,
      0x0B, 0x00, 0x20, 0xC2, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33,
      0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x3D, 0x30, 0x42, 0x43, 0x0F,
      0x10, 0x0C, 0x00, 0x20, 0xCD, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x1F, 0x30, 0x42, 0x45,
      0x0F, 0x10, 0x0D, 0x00, 0x20, 0xD8, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x2A, 0x2D, 0x42,
      0x46, 0x0F, 0x10, 0x0E, 0x00, 0x20, 0xE3, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x33, 0x30,
      0x42, 0x48, 0x0F, 0x10, 0x0F, 0x00, 0x20, 0xEE, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x47,
      0x30, 0x42, 0x48, 0x0F, 0x10, 0x10, 0x00, 0x20, 0xF9, 0x84, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41,
      0x25, 0x30, 0x42, 0x47, 0x0F, 0x10, 0x11, 0x00, 0x20, 0x04, 0x85, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A,
      0x41, 0x38, 0x30, 0x42, 0x4A, 0x0F, 0x10, 0x12, 0x00, 0x20, 0x0F, 0x85, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00,
      0x3A, 0x41, 0x0A, 0x2E, 0x42, 0x4B, 0x0F, 0x10, 0x13, 0x00, 0x20, 0x1A, 0x85, 0xFF, 0x5C, 0x30, 0xF3, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40,
      0x00, 0x3A, 0x41, 0x36, 0x30, 0x42, 0x4B, 0x0F, 0x10, 0x14, 0x00, 0x20, 0x25, 0x85, 0xFF, 0x5C, 0x30, 0xF3,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35, 0x00,
      0x40, 0x00, 0x3A, 0x41, 0x3C, 0x30, 0x42, 0x4F, 0x0F, 0x10, 0x15, 0x00, 0x20, 0x30, 0x85, 0xFF, 0x5C, 0x30,
      0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x35,
      0x00, 0x40, 0x00, 0x3A, 0x41, 0x42, 0x30, 0x42, 0x50, 0x0F, 0x10, 0x16, 0x00, 0x20, 0x3B, 0x85, 0xFF, 0x5C,
      0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00,
      0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x3C, 0x30, 0x42, 0x50, 0x0F, 0x10, 0x17, 0x00, 0x20, 0x46, 0x85, 0xFF,
      0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00,
      0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x42, 0x30, 0x42, 0x50, 0x0F, 0x10, 0x18, 0x00, 0x20, 0x51, 0x85,
      0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x34,
      0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x4F, 0x30, 0x42, 0x50, 0x0F, 0x10, 0x19, 0x00, 0x20, 0x5C,
      0x85, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00,
      0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x3D, 0x30, 0x42, 0x51, 0x0F, 0x10, 0x1A, 0x00, 0x20,
      0x67, 0x85, 0xFF, 0x5C, 0x30, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00,
      0x00, 0x34, 0x00, 0x00, 0x35, 0x00, 0x40, 0x00, 0x3A, 0x41, 0x2B, 0x30, 0x42, 0x52, 0x0F, 0x06, 0xAF
    ];

    const p = new Packet();
    p.decode(testPaketBin);
    expect(() => {
      p.decode(testPaketBin).not.toThrow(error);
    });
  });
});
