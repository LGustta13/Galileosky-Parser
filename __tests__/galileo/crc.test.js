const crc16 = require('../../receiver/galileo/crc.js'); // Ajuste o caminho para o seu arquivo de código

describe('crc16Test', () => {

    it('Deve calcular o valor CRC16 corretamente para um pacote simples', () => {

        try {
            const inputData = Buffer.from([0x01, 0x02, 0x03]);
            const expectedCrc = 0x6161;
            const crc = crc16(inputData);
    
            expect(crc).toBe(expectedCrc);
        } catch (err) {
            throw new Error(`Erro: ${err.message}`);
        }
    });

    it('Deve calcular o valor CRC16 corretamente para o pacote da documentação da GalileoSky', () => {

        try {
            const inputData = Buffer.from([0x01, 0x20, 0x00, 0x01, 0x9a, 0x02, 0x18, 0x03, 0x38, 0x36, 0x31, 0x32, 0x33, 0x30, 0x30, 0x34,
                0x33, 0x39, 0x30, 0x37, 0x36, 0x32, 0x36, 0x04, 0x32, 0x00, 0xfe, 0x06, 0x00, 0x01, 0x00, 0x00,
                0x00, 0x00, 0x00]);
            const expectedCrc = 0x298F;
            const crc = crc16(inputData);
    
            expect(crc).toBe(expectedCrc);
        } catch (err) {
            throw new Error(`Erro: ${err.message}`);
        }
    });

    it('Deve calcular o valor CRC16 corretamente para o pacote header', () => {

        try {
            const inputData = Buffer.from([0x01, 0x17, 0x80, 0x01, 0x82, 0x02, 0x10, 0x03, 0x38, 0x36, 0x32, 0x30, 0x35, 0x37, 0x30,
                0x34, 0x37, 0x37, 0x34, 0x35, 0x35, 0x33, 0x31, 0x04, 0x32, 0x00]);
            const expectedCrc = 0x48B5;
            const crc = crc16(inputData);

            expect(crc).toBe(expectedCrc);
        } catch (err) {
            throw new Error(`Erro: ${err.message}`);
        }
    });

    it('Deve calcular o valor CRC16 corretamente para o pacote main', () => {

        try {
            const inputData = Buffer.from([0x01,	0xe7,	0x83,	0x10,	0x00,	0x00,	0x20,	0x4e,	0x83,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,
                0x01,	0x3a,	0x41,	0x3f,	0x30,	0x42,	0xfe,	0x0e,	0x10,	0x01,	0x00,	0x20,	0x8d,	0x83,	0xff,	0x5c,
                0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,
                0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x3b,	0x2e,	0x42,	0x08,	0x0f,	0x10,	0x02,	0x00,
                0x20,	0x06,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,
                0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x2e,	0x30,	0x42,
                0x22,	0x0f,	0x10,	0x03,	0x00,	0x20,	0x6b,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,
                0x3a,	0x41,	0x45,	0x30,	0x42,	0x39,	0x0f,	0x10,	0x04,	0x00,	0x20,	0x76,	0x84,	0xff,	0x5c,	0x30,
                0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,
                0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0xdf,	0x2d,	0x42,	0x3a,	0x0f,	0x10,	0x05,	0x00,	0x20,
                0x81,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,
                0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x5b,	0x30,	0x42,	0x3b,
                0x0f,	0x10,	0x06,	0x00,	0x20,	0x8b,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,
                0x41,	0x2b,	0x2e,	0x42,	0x3e,	0x0f,	0x10,	0x07,	0x00,	0x20,	0x96,	0x84,	0xff,	0x5c,	0x30,	0xf3,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,
                0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0xf2,	0x2d,	0x42,	0x3f,	0x0f,	0x10,	0x08,	0x00,	0x20,	0xa1,
                0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,
                0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x83,	0x2e,	0x42,	0x3e,	0x0f,
                0x10,	0x09,	0x00,	0x20,	0xac,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,
                0x49,	0x30,	0x42,	0x42,	0x0f,	0x10,	0x0a,	0x00,	0x20,	0xb7,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,
                0x00,	0x40,	0x00,	0x3a,	0x41,	0x3a,	0x30,	0x42,	0x43,	0x0f,	0x10,	0x0b,	0x00,	0x20,	0xc2,	0x84,
                0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,
                0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x3d,	0x30,	0x42,	0x43,	0x0f,	0x10,
                0x0c,	0x00,	0x20,	0xcd,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x1f,
                0x30,	0x42,	0x45,	0x0f,	0x10,	0x0d,	0x00,	0x20,	0xd8,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,
                0x40,	0x00,	0x3a,	0x41,	0x2a,	0x2d,	0x42,	0x46,	0x0f,	0x10,	0x0e,	0x00,	0x20,	0xe3,	0x84,	0xff,
                0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,
                0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x33,	0x30,	0x42,	0x48,	0x0f,	0x10,	0x0f,
                0x00,	0x20,	0xee,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
                0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x47,	0x30,
                0x42,	0x48,	0x0f,	0x10,	0x10,	0x00,	0x20,	0xf9,	0x84,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,
                0x00,	0x3a,	0x41,	0x25,	0x30,	0x42,	0x47,	0x0f,	0x10,	0x11,	0x00,	0x20,	0x04,	0x85,	0xff,	0x5c,
                0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,
                0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x38,	0x30,	0x42,	0x4a,	0x0f,	0x10,	0x12,	0x00,
                0x20,	0x0f,	0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,
                0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x0a,	0x2e,	0x42,
                0x4b,	0x0f,	0x10,	0x13,	0x00,	0x20,	0x1a,	0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,
                0x3a,	0x41,	0x36,	0x30,	0x42,	0x4b,	0x0f,	0x10,	0x14,	0x00,	0x20,	0x25,	0x85,	0xff,	0x5c,	0x30,
                0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,
                0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x3c,	0x30,	0x42,	0x4f,	0x0f,	0x10,	0x15,	0x00,	0x20,
                0x30,	0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,
                0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x42,	0x30,	0x42,	0x50,
                0x0f,	0x10,	0x16,	0x00,	0x20,	0x3b,	0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,
                0x41,	0x3c,	0x30,	0x42,	0x50,	0x0f,	0x10,	0x17,	0x00,	0x20,	0x46,	0x85,	0xff,	0x5c,	0x30,	0xf3,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,
                0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x42,	0x30,	0x42,	0x50,	0x0f,	0x10,	0x18,	0x00,	0x20,	0x51,
                0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,
                0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,	0x4f,	0x30,	0x42,	0x50,	0x0f,
                0x10,	0x19,	0x00,	0x20,	0x5c,	0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
                0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,	0x00,	0x40,	0x00,	0x3a,	0x41,
                0x3d,	0x30,	0x42,	0x51,	0x0f,	0x10,	0x1a,	0x00,	0x20,	0x67,	0x85,	0xff,	0x5c,	0x30,	0xf3,	0x00,
                0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,	0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x35,
                0x00,	0x40,	0x00,	0x3a,	0x41,	0x2b,	0x30,	0x42,	0x52,	0x0f]);
            const expectedCrc = 0x2DA5;
            const crc = crc16(inputData);

        expect(crc).toBe(expectedCrc);
    } catch (err) {
        throw new Error(`Erro: ${err.message}`);
    }
  });
});